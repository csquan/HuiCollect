// Code generated by MockGen. DO NOT EDIT.
// Source: tokens.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTokener is a mock of Tokener interface
type MockTokener struct {
	ctrl     *gomock.Controller
	recorder *MockTokenerMockRecorder
}

// MockTokenerMockRecorder is the mock recorder for MockTokener
type MockTokenerMockRecorder struct {
	mock *MockTokener
}

// NewMockTokener creates a new mock instance
func NewMockTokener(ctrl *gomock.Controller) *MockTokener {
	mock := &MockTokener{ctrl: ctrl}
	mock.recorder = &MockTokenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTokener) EXPECT() *MockTokenerMockRecorder {
	return m.recorder
}

// GetDecimals mocks base method
func (m *MockTokener) GetDecimals(symbol string) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDecimals", symbol)
	ret0, _ := ret[0].(int)
	return ret0
}

// GetDecimals indicates an expected call of GetDecimals
func (mr *MockTokenerMockRecorder) GetDecimals(symbol interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDecimals", reflect.TypeOf((*MockTokener)(nil).GetDecimals), symbol)
}

// GetCurrency mocks base method
func (m *MockTokener) GetCurrency(symbol, chain string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrency", symbol, chain)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetCurrency indicates an expected call of GetCurrency
func (mr *MockTokenerMockRecorder) GetCurrency(symbol, chain interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrency", reflect.TypeOf((*MockTokener)(nil).GetCurrency), symbol, chain)
}
